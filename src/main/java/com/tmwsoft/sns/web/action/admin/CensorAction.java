package com.tmwsoft.sns.web.action.admin;import java.util.ArrayList;import java.util.List;import java.util.Map;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import org.apache.commons.lang.StringUtils;import org.apache.struts.action.ActionForm;import org.apache.struts.action.ActionForward;import org.apache.struts.action.ActionMapping;import com.tmwsoft.sns.service.DataBaseService;import com.tmwsoft.sns.util.Common;import com.tmwsoft.sns.web.action.BaseAction;public class CensorAction extends BaseAction {	@Override	public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) {		if (!Common.checkPerm(request, response, "managecensor")) {			return cpMessage(request, mapping, "cp_no_authority_management_operation");		}		try {			if (submitCheck(request, "censorsubmit")) {				String censor = Common.trim(request.getParameter("censor"));				String[] censorDatas = censor.split("\n");				List<String> newData = new ArrayList<String>();				for (String censorData : censorDatas) {					String[] list = censorData.split("=");					int length = list.length;					if (list != null && length > 0) {						String newFind = Common.trim(list[0]);						if (Common.strlen(newFind) >= 2) {							String newReplace = null;							if (length > 1) {								newReplace = list[1];							} else {								newReplace = "";							}							newReplace = newReplace.trim();							if (Common.strlen(newReplace) < 1) {								newReplace = "**";							}							newData.add(newFind + "=" + newReplace);						}					}				}				Common.setData("censor", newData.size() > 0 ? Common.implode(newData, "\n") : "", false);				cacheService.censor_cache();				return cpMessage(request, mapping, "do_success", "backstage.action?ac=censor");			} else if (StringUtils.equalsIgnoreCase(request.getParameter("subac"), "viewRecords")) {				/*				 * 审核通过处理				 */				do_audit_process(request, dataBaseService);				/*				 * 查询词语屏蔽记录				 */				do_wordshield_search(request, dataBaseService);				return mapping.findForward("censor_records");			}		} catch (Exception e) {			return showMessage(request, response, e.getMessage());		}		request.setAttribute("censor", Common.getData("censor"));		request.setAttribute("banflag", "{BANNED}");		return mapping.findForward("censor");	}	/**	 * 审核通过处理	 * 	 * @param request	 * @param dataBaseService	 */	private void do_audit_process(HttpServletRequest request, DataBaseService dataBaseService) {		if (StringUtils.equalsIgnoreCase("doaudit", request.getParameter("do"))) {			String wordshieldIdStr = request.getParameter("wsid");			StringBuffer sql = new StringBuffer();			sql.append("update sns_wordshield set status='p' where id=").append(wordshieldIdStr);			dataBaseService.executeUpdate(sql.toString());		}	}	/**	 * 查询词语屏蔽记录	 * 	 * @param request	 * @param dataBaseService	 */	private void do_wordshield_search(HttpServletRequest request, DataBaseService dataBaseService) {		final int page_count = 10;		String where = " where a.modify_user_id = b.uid and a.status != 'p' ";		int rows_count = dataBaseService.findRows(" select count(*) from sns_wordshield where status != 'p'");		// 创建sql,		// eg. select a.*, b.username from sns_wordshield a, sns_member b where		// a.modify_user_id = b.uid and a.status != 'p'		StringBuffer sql = new StringBuffer();		sql.append("select a.*, b.username from sns_wordshield a, sns_member b ").append(where).append(" order by create_date desc ");		// 处理分页		Integer page = 0;		try {			page = Integer.valueOf(request.getParameter("page"));		} catch (Exception ex) {			;		}		sql.append(" limit " + page * page_count + ", " + page_count);		List<Map<String, Object>> results = dataBaseService.executeQuery(sql.toString());		request.setAttribute("page", page);		request.setAttribute("page_count", page_count);		request.setAttribute("censor_records_count", rows_count);		request.setAttribute("censor_records", results);	}}