package com.tmwsoft.sns.web.action;import java.util.List;import java.util.Map;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import javax.servlet.http.HttpSession;import org.apache.struts.action.ActionForm;import org.apache.struts.action.ActionForward;import org.apache.struts.action.ActionMapping;import com.tmwsoft.sns.util.Common;import com.tmwsoft.sns.util.CookieHelper;public class SsoLoginAction extends BaseAction {	@Override	public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) {		HttpSession session = request.getSession();		String username = (String)session.getAttribute("userAccount");		if(username == null) {			// 跳到后台登录页面			return showMessage(request, response, "login_failure_please_re_login", "backstage.action");		}		List<Map<String, Object>> members = dataBaseService.executeQuery("SELECT * FROM sns_member WHERE username = '" + username + "'");		if (members.isEmpty()) {			// 跳到后台登录页面			return showMessage(request, response, "login_failure_please_re_login", "backstage.action");		}		// 单点登陆，进入后台管理首页		Map<String, Object> sGlobal = (Map<String, Object>) request.getAttribute("sGlobal");		Map<String, Object> member = members.get(0);		int cookieTime = 30 * 60 * 1000;		CookieHelper.setCookie(request, response, "auth", Common.authCode(member.get("password") + "\t" + member.get("uid"), "ENCODE", null, 0), cookieTime == 0 ? -1 : cookieTime);		CookieHelper.setCookie(request, response, "loginuser", (String) member.get("username"), cookieTime);		CookieHelper.removeCookie(request, response, "_refer");		sGlobal.put("supe_uid", member.get("uid"));		return new ActionForward("/backstage.action?ac=index&logintype=sso");	}}