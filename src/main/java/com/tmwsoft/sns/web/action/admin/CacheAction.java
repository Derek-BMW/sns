package com.tmwsoft.sns.web.action.admin;import java.io.File;import java.util.Map;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import org.apache.struts.action.ActionForm;import org.apache.struts.action.ActionForward;import org.apache.struts.action.ActionMapping;import com.tmwsoft.util.DateUtils;import com.tmwsoft.sns.util.Common;import com.tmwsoft.sns.util.SysConstants;import com.tmwsoft.sns.web.action.BaseAction;public class CacheAction extends BaseAction {	@Override	public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) {		if (!Common.checkPerm(request, response, "managecache")) {			return cpMessage(request, mapping, "cp_no_authority_management_operation");		}		try {			if (submitCheck(request, "cachesubmit")) {				String[] cacheTypes = request.getParameterValues("cachetype");				Map<String, String> snsInfo = SysConstants.snsInfo;				// 模块数据缓存				if (cacheTypes == null || Common.in_array(cacheTypes, "block")) {					Map<String, Object> sConfig = (Map<String, Object>) request.getAttribute("sConfig");					cacheService.block_data_cache(sConfig);				}				// 系统配置缓存				if (cacheTypes == null || Common.in_array(cacheTypes, "database")) {					cacheService.config_cache();					cacheService.usergroup_cache();					cacheService.profilefield_cache();					cacheService.profield_cache();					cacheService.censor_cache();					cacheService.block_cache();					cacheService.eventclass_cache();					cacheService.magic_cache();					cacheService.click_cache();					cacheService.task_cache();					cacheService.ad_cache();					cacheService.creditrule_cache();					cacheService.userapp_cache();					cacheService.app_cache();					cacheService.home_cache();					// 最后更新时间					snsInfo.put("cache_updatetime_database", DateUtils.getCurrDefaultDateTime());				}				// 广告数据缓存				if (cacheTypes == null || Common.in_array(cacheTypes, "ad")) {					cacheService.ad_data_cache();				}				// 其他缓存				if (cacheTypes == null || Common.in_array(cacheTypes, "home")) {					File[] files = Common.readDir(SysConstants.snsRoot + "/data/cache", "txt");					if (files != null) {						for (File file : files) {							if (file.isFile()) {								file.delete();							}						}					}					// 更新用户名缓存					Map<Integer, String> sNames = (Map<Integer, String>) request.getAttribute("sNames");					Common.realname_init(sNames);					// 最后更新时间					snsInfo.put("cache_updatetime_home", DateUtils.getCurrDefaultDateTime());				}				SysConstants.snsConfig.clear();				return cpMessage(request, mapping, "do_success", "backstage.action?ac=cache");			}		} catch (Exception e1) {			e1.printStackTrace();			return showMessage(request, response, e1.getMessage());		}		return mapping.findForward("cache");	}}