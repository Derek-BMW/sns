package com.tmwsoft.sns.web.action.admin;import java.util.HashMap;import java.util.Map;import java.util.Map.Entry;import java.util.regex.Pattern;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import org.apache.struts.action.ActionForm;import org.apache.struts.action.ActionForward;import org.apache.struts.action.ActionMapping;import com.tmwsoft.sns.util.Common;import com.tmwsoft.sns.web.action.BaseAction;public class HomeAction extends BaseAction {	@Override	public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) {		if (!Common.checkPerm(request, response, "managehome")) {			return cpMessage(request, mapping, "cp_no_authority_management_operation");		}		try {			// 提交数据			if (submitCheck(request, "homesubmit")) {				Map<String, Object> home = (Map<String, Object>) Common.getParameters(request, "home");				if (home != null) {					Pattern pattern = Pattern.compile("[^a-z]", Pattern.CASE_INSENSITIVE);					Pattern separatorPattern = Pattern.compile(",");					String[] arr = null;					Map<Integer, Integer> narr = null;					int tempV = 0;					for (Entry<String, Object> entry : home.entrySet()) {						String type = entry.getKey();						Map<String, Object> values = (Map<String, Object>) entry.getValue();						for (Entry<String, Object> subEntry : values.entrySet()) {							String key = subEntry.getKey();							String value = ((String) subEntry.getValue()).trim();							if (value.indexOf(",") >= 0) {								narr = new HashMap<Integer, Integer>();								arr = separatorPattern.split(value);								for (String v : arr) {									v = v.trim();									tempV = Common.intval(v);									if (tempV != 0)										narr.put(tempV, tempV);								}								value = Common.implode(narr, ",");							} else if (pattern.matcher(value).matches()) {								value = String.valueOf(Common.intval(value));							}							values.put(key, value);						}						home.put(type, values);					}					// 将修改的数据保存到数据库					Common.setData("home", home, false);					cacheService.home_cache();				}				return cpMessage(request, mapping, "do_success", "backstage.action?ac=home");			}		} catch (Exception e1) {			return showMessage(request, response, e1.getMessage());		}		// 获取数据		Map<String, Map<String, Object>> globalHome = Common.getCacheDate(request, response, "cache/cache_home.jsp", "globalHome");		Map<String, String> orders = new HashMap<String, String>();		String[] types = new String[] { "blog", "pic", "thread", "poll", "event", "share" };		for (String type : types) {			Map<String, Object> home = globalHome.get(type);			if (home != null) {				orders.put("order_" + type + "_" + home.get("order"), " selected");				orders.put("sc_" + type + "_" + home.get("sc"), " selected");			}		}		request.setAttribute("orders", orders);		request.setAttribute("globalHome", globalHome);		return mapping.findForward("home");	}}